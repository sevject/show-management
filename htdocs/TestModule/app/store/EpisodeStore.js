/*
 * File: app/store/EpisodeStore.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TestModule.store.EpisodeStore', {
    extend: 'Ext.data.Store',

    requires: [
        'Ext.data.proxy.Ajax',
        'Ext.data.reader.Json',
        'Ext.data.Field'
    ],

    constructor: function(cfg) {
        var me = this;
        cfg = cfg || {};
        me.callParent([Ext.apply({
            autoLoad: true,
            storeId: 'EpisodeStore',
            pageSize: 50,
            proxy: {
                type: 'ajax',
                url: '/TestModule/StoreResource.php?action=loadEpisodes',
                reader: {
                    type: 'json',
                    root: 'rows'
                }
            },
            fields: [
                {
                    name: 'EpisodeID',
                    type: 'int'
                },
                {
                    name: 'EpisodeNr',
                    type: 'string'
                },
                {
                    name: 'Season',
                    type: 'string'
                },
                {
                    name: 'Title',
                    type: 'string'
                },
                {
                    dateFormat: 'Y-m-d',
                    name: 'AirDate',
                    type: 'date'
                },
                {
                    name: 'Watched',
                    type: 'boolean'
                },
                {
                    name: 'SeriesID',
                    type: 'int'
                },
                {
                    name: 'SeriesTitle',
                    type: 'string'
                },
                {
                    name: 'Description'
                }
            ],
            listeners: {
                beforeload: {
                    fn: me.onJsonstoreBeforeLoad,
                    scope: me
                }
            }
        }, cfg)]);
    },

    onJsonstoreBeforeLoad: function(store, operation, eOpts) {
        var seriesCombo = Ext.ComponentQuery.query('#seriesCombo')[0],
            seasonCombo = Ext.ComponentQuery.query('#seasonCombo')[0],
            watchedState = Ext.ComponentQuery.query('#watchedState')[0];

        store.getProxy().setExtraParam('SeriesID', seriesCombo.getValue());
        store.getProxy().setExtraParam('Season', seasonCombo.getValue());
        store.getProxy().setExtraParam('Watched', watchedState.getValue());
    }

});